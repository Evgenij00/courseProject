@*устанавливает модель представления - та сущность, которая будет доступна в представлении через объект Model*@

@model courseProject.ViewModels.IndexViewModel;

@{
    //Вначале объявляется заголовок с помощью выражения ViewData["Title"].
    //Этот заголовок затем вставляется на мастер-страницу.
    ViewData["Title"] = "Онлайн тесты";

    string userName = User.Identity.Name;
}
    

<div class="home-container">

    <!-- Основная часть -->
    <div class="container pt-5">

        <!-- Заголовки -->
        <div class="titles mb-5">
            <h1>Тесты онлайн</h1>
            <h2>психологические, образовательные, IQ</h2>
        </div>



        <!-- Категории, Фильтрация и Сортировка -->
        <div class="config d-flex justify-content-between mb-5">

            <!-- Контейнер (Категории и фильтрация)-->
            <div class="d-flex">

                <div class="dropdown mr-2">
                    <button class="btn btn-light  dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Категория
                    </button>
                    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">

                        @foreach (var category in ViewBag.Categories)
                        {
                            <a class="dropdown-item" asp-controller="Home" asp-action="Category"
                               asp-route-categoryId="@category.Id">@category.Name</a>
                        }
                    </div>
                </div>

            </div>
        </div>


        <!-- Карточки -->
        <div class="d-flex flex-wrap justify-content-between" id="cards">

            @if (userName != null)
            {
                foreach (Test test in Model.Tests)
                {
                    <a class="test" asp-controller="Test" asp-action="Index" asp-route-testId="@test.Id">
                        <div class="icon">
                            <img src="@test.Icon" alt="Иконка">
                        </div>
                        <p class="name">@test.Name</p>

                        @if (test.Favorite)
                        {
                            <div class="favorite isFavorite" data-test-id="@test.Id">
                                <i class="fa fa-heart"></i>
                            </div>
                        }
                        else
                        {
                            <div class="favorite" data-test-id="@test.Id">
                                <i class="fa fa-heart"></i>
                            </div>
                        }
                    </a>
                }
            }
            else
            {
                foreach (Test test in Model.Tests)
                {
                    <a class="test" asp-controller="Test" asp-action="Index" asp-route-testId="@test.Id">
                        <div class="icon">
                            <img src="@test.Icon" alt="Иконка">
                        </div>
                        <p class="name">@test.Name</p>
                    </a>
                }
            }

        </div>
        <!-- Карточки -->
        @if (Model.PageViewModel.HasPreviousPage)
        {
            <a asp-action="Index"
               asp-route-numPage="@(Model.PageViewModel.PageNumber - 1)"
               class="btn btn-outline-primary">
                Назад
            </a>
        }

        @if (Model.PageViewModel.HasNextPage)
        {
            <a asp-action="Index"
               asp-route-numPage="@(Model.PageViewModel.PageNumber + 1)"
               class="btn btn-outline-primary">
                Вперед
            </a>
        }
    </div>
</div> 

<script src="/js/favorite.js"></script>